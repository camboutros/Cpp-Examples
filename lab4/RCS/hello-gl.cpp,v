head	1.25;
access;
symbols;
locks;
comment	@// @;


1.25
date	2016.01.20.22.32.43;	author -;	state -;
branches;
next	1.24;

1.24
date	2016.01.20.22.28.31;	author -;	state -;
branches;
next	1.23;

1.23
date	2016.01.20.22.26.47;	author -;	state -;
branches;
next	1.22;

1.22
date	2016.01.20.22.21.54;	author -;	state -;
branches;
next	1.21;

1.21
date	2016.01.20.22.21.00;	author -;	state -;
branches;
next	1.20;

1.20
date	2016.01.20.01.48.55;	author -;	state -;
branches;
next	1.19;

1.19
date	2016.01.20.01.41.36;	author -;	state -;
branches;
next	1.18;

1.18
date	2016.01.20.01.40.41;	author -;	state -;
branches;
next	1.17;

1.17
date	2016.01.20.01.40.25;	author -;	state -;
branches;
next	1.16;

1.16
date	2016.01.20.01.40.00;	author -;	state -;
branches;
next	1.15;

1.15
date	2016.01.20.01.39.21;	author -;	state -;
branches;
next	1.14;

1.14
date	2016.01.20.01.39.05;	author -;	state -;
branches;
next	1.13;

1.13
date	2016.01.20.01.29.33;	author -;	state -;
branches;
next	1.12;

1.12
date	2016.01.20.01.28.14;	author -;	state -;
branches;
next	1.11;

1.11
date	2016.01.20.01.27.54;	author -;	state -;
branches;
next	1.10;

1.10
date	2016.01.20.01.27.33;	author -;	state -;
branches;
next	1.9;

1.9
date	2016.01.20.01.24.40;	author -;	state -;
branches;
next	1.8;

1.8
date	2016.01.20.01.22.41;	author -;	state -;
branches;
next	1.7;

1.7
date	2016.01.20.01.21.46;	author -;	state -;
branches;
next	1.6;

1.6
date	2016.01.20.01.18.33;	author -;	state -;
branches;
next	1.5;

1.5
date	2016.01.20.01.15.18;	author -;	state -;
branches;
next	1.4;

1.4
date	2016.01.20.01.14.54;	author -;	state -;
branches;
next	1.3;

1.3
date	2016.01.20.01.14.10;	author -;	state -;
branches;
next	1.2;

1.2
date	2016.01.20.01.14.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2016.01.20.01.10.10;	author -;	state -;
branches;
next	;


desc
@@


1.25
log
@-
@
text
@// $Id: hello-gl.cpp,v 1.24 2016-01-20 14:28:31-08 - - $

// Display "Hello World" in a window.

#include <iostream>
#include <string>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

#define SHOW(X) \
        cout << __func__ << ": " << #X << " = (" << X << ")" << endl;

struct {
   string name;
   int width {256};
   int height {192};
   string message {"Hello, World!"};
   const GLubyte* msg_text() {
      return reinterpret_cast<const GLubyte*> (message.c_str());
   }
} window;

void display() {
   SHOW (window.name);
   SHOW (window.width);
   SHOW (window.height);
   SHOW (window.message);
   void* font = GLUT_BITMAP_TIMES_ROMAN_24;
   int msg_width = glutBitmapLength (font, window.msg_text());
   int msg_height = glutBitmapHeight (font);
   SHOW (msg_width);
   SHOW (msg_height);
   glClearColor (0.25, 0.25, 0.25, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);
   glColor3ub (0x00, 0xFF, 0x00);
   GLfloat xpos = window.width / 2.0 - msg_width / 2.0;
   GLfloat ypos = window.height / 2.0 - msg_height / 4.0;
   SHOW (xpos);
   SHOW (ypos);
   glRasterPos2f (xpos, ypos);
   glutBitmapString (font, window.msg_text());
   glutSwapBuffers();
}

void reshape (int width, int height) {
   SHOW (width);
   SHOW (height);
   window.width = width;
   window.height = height; 
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (0, window.width, 0, window.height);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   window.name = basename (argv[0]);
   if (argc > 1) {
      window.message = argv[1];
      for (int index = 2; index < argc; ++index)
         (window.message += " ") += argv[index];
   }
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutCreateWindow (window.name.c_str());
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.23 2016-01-20 14:26:47-08 - - $
d64 1
a64 1
      for (int index = 0; index < argc; ++index)
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.22 2016-01-20 14:21:54-08 - - $
d31 4
a34 4
   int width = glutBitmapLength (font, window.msg_text());
   int height = glutBitmapHeight (font);
   SHOW (width);
   SHOW (height);
d38 2
a39 2
   GLfloat xpos = window.width / 2.0 - width / 2.0;
   GLfloat ypos = window.height / 2.0 - height / 4.0;
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.21 2016-01-20 14:21:00-08 - - $
d12 3
d26 4
a29 3
   cout << __func__ << ": " << window.name << ": " << window.width
        << "x" << window.height << ": \"" << window.message << "\""
        << endl;
d33 2
d40 2
d48 2
a49 1
   cout << __func__ << "(" << width << "," << height << ")" << endl;
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.20 2016-01-19 17:48:55-08 - - $
d24 1
a24 1
        << "x" << window.height << ": \" << window.message << "\""
d55 1
a55 1
      for (size_t index = 0; index < argc; ++index)
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.19 2016-01-19 17:41:36-08 - - $
d23 3
d53 5
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.18 2016-01-19 17:40:41-08 - - $
d24 2
a25 3
   int str_width = glutBitmapLength (font, window.msg_text());
   int str_height = glutBitmapHeight (font);
   cout << str_width << "," << str_height << ": ";
d29 2
a30 3
   GLfloat xpos = window.width / 2.0 - str_width / 2.0;
   GLfloat ypos = window.height / 2.0 - str_height / 4.0;
   cout << xpos << "," << ypos;
a32 1
   cout << endl;
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.17 2016-01-19 17:40:25-08 - - $
d17 1
a17 1
   const GLubyte* text() {
d24 1
a24 1
   int str_width = glutBitmapLength (font, window.text());
d34 1
a34 1
   glutBitmapString (font, window.text());
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.16 2016-01-19 17:40:00-08 - - $
d18 1
a18 1
      return static_cast<const GLubyte*> (message.c_str());
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.15 2016-01-19 17:39:21-08 - - $
d18 1
a18 1
      return static_cast<GLubyte*> (message.c_str());
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.13 2016-01-19 17:29:33-08 - - $
d17 3
a19 1
   const GLubyte* text() { return message.c_str(); }
@


1.14
log
@-
@
text
@d17 1
a17 1
   const GLubyte* text() { return message; }
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.12 2016-01-19 17:28:14-08 - - $
d17 1
d22 1
a22 1
   int str_width = glutBitmapLength (font, window.message.c_str());
d32 1
a32 1
   glutBitmapString (font, (GLubyte*) window.message.c_str());
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.11 2016-01-19 17:27:54-08 - - $
d16 1
a19 2
   const string hello {"Hello"};
   cout << hello << ": ";
d21 1
a21 1
   int str_width = glutBitmapLength (font, (GLubyte*) hello.c_str());
d31 1
a31 1
   glutBitmapString (font, (GLubyte*) hello.c_str());
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.10 2016-01-19 17:27:33-08 - - $
d54 1
a54 1
   glutCreateWindow (window.name);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.9 2016-01-19 17:24:40-08 - - $
d43 1
a43 1
   glOrtho2D (0, window.width, 0, window.height);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.8 2016-01-19 17:22:41-08 - - $
d12 5
a16 2
constexpr unsigned WINDOW_WIDTH = 256;
constexpr unsigned WINDOW_HEIGHT = 192;
d28 2
a29 2
   GLfloat xpos = WINDOW_WIDTH / 2.0 - str_width / 2.0;
   GLfloat ypos = WINDOW_HEIGHT / 2.0 - str_height / 4.0;
d43 1
a43 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
d50 1
d53 2
a54 2
   glutInitWindowSize (WINDOW_WIDTH, WINDOW_HEIGHT);
   glutCreateWindow (basename (argv[0]));
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.7 2016-01-19 17:21:46-08 - - $
d34 12
d52 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.5 2016-01-19 17:15:18-08 - - $
d25 2
a26 2
   GLfloat xpos = (WINDOW_WIDTH - str_width) / 2.0;
   GLfloat ypos = (WINDOW_HEIGHT - str_height) / 4.0;
@


1.6
log
@-
@
text
@d5 1
d7 1
d16 2
a17 1
   const std::string hello {"Hello"};
d21 1
d27 1
d30 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.4 2016-01-19 17:14:54-08 - - $
d14 1
a14 1
   const std::string hello {"Hello, World!"};
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.3 2016-01-19 17:14:10-08 - - $
a28 1
   window.name = basename (argv[0]);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.2 2016-01-19 17:14:00-08 - - $
d24 1
a24 1
   glutBitmapString (font, hello.c_str());
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.1 2016-01-19 17:10:10-08 - - $
d20 1
a20 1
   glColor3ubv (0x00, 0xFF, 0x00);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d5 2
d14 1
a14 1
   const char* const hello= "Hello, World!";
d16 2
a17 2
   int width = glutBitmapLength (font, (GLubyte*) hello);
   int height = glutBitmapHeight (font);
d21 2
a22 2
   GLfloat xpos = window.width / 2.0 - str_width / 2.0;
   GLfloat ypos = window.height / 2.0 - str_height / 4.0;
@
